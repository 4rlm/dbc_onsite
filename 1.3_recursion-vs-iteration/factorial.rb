require 'benchmark'

###########################

def factorial_iterative(n)
  (1..n).reduce(1, :*)
end

f = 5000
i = 500
puts Benchmark.measure { factorial_iterative(f) * i }

# 0)  0.000000   0.000000   0.000000 (  0.000005)
# 1000)  0.000000   0.000000   0.000000 (  0.000908)
# 2000)  0.000000   0.000000   0.000000 (  0.002580)
# 3000)  0.000000   0.000000   0.000000 (  0.005100)
# 4000)    0.010000   0.000000   0.010000 (  0.009045)
# 5000)  0.010000   0.000000   0.010000 (  0.013647)

###########################

def factorial_recursive(n)
  return 1 if n < 2
  n * factorial_recursive(n - 1)
end

f = 5000
i = 500
puts Benchmark.measure { factorial_recursive(f) * i }

# 0)    0.000000   0.000000   0.000000 (  0.000005)
# 1000) 0.000000   0.000000   0.000000 (  0.000865)
# 2000) 0.000000   0.000000   0.000000 (  0.002634)
# 3000) 0.000000   0.000000   0.000000 (  0.005763)
# 4000) 0.010000   0.000000   0.010000 (  0.009011)
# 5000) 0.010000   0.000000   0.010000 (  0.013865)
